@using Flurl.Http;
@using ShikkhanobishBlazor.Models
@using System.Globalization
@inject Blazored.LocalStorage.ILocalStorageService oLocalStore
@page "/ApiCodeGenaretor"



<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <title>Dashboard</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta content="Responsive bootstrap 4 admin template" name="description" />
    <meta content="Coderthemes" name="author" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/morris.js/0.5.1/morris.css">

</head>

<body>

    <!-- Begin page -->
    <div id="wrapper" style="background-color: #F7F7F7; ">
        <!-- LOGO -->

        <div class="logo-box mt-2 m-0 ml-0">
            <a href="Count" class="">

                <img src="/images/snImg.jpg" style="display: block; margin-left: auto; margin-right: auto; width: 50px;height:50px;">

            </a>
        </div>
        <!-- Topbar Start -->
        <div class="navbar-custom">
            <ul class="list-unstyled topnav-menu float-right mb-0">
                <li class="dropdown notification-list">
                    <a class="nav-link dropdown-toggle nav-user mr-0" data-toggle="dropdown" href="#" role="button" aria-haspopup="false" aria-expanded="false">
                        <img src="/images/images.png" alt="user-image" class="rounded-circle" />
                        <span class="pro-user-name ml-1"> <i class="mdi mdi-chevron-down"></i> @userName</span>
                    </a>
                    <div class="dropdown-menu dropdown-menu-right profile-dropdown">
                        <!-- item-->
                        <a href="javascript:void(0);" class="dropdown-item notify-item">
                            <i class="mdi mdi-logout-variant"></i>
                            <span @onclick="Logout">Logout</span>
                        </a>
                    </div>
                </li>
            </ul>

            <ul class="list-unstyled topnav-menu topnav-menu-left m-0">
                <li>
                    <button class="button-menu-mobile">
                        <i class="mdi mdi-menu"></i>
                    </button>
                </li>
            </ul>
        </div>
        <!-- end Topbar -->
        <!-- Left Sidebar Start  -->
        <div class="left-side-menu">
            <div class="user-box">
                <div class="float-left">
                    <img src="/images/images.png" alt="" class="avatar-md rounded-circle" />
                </div>
                <div class="user-info">
                    <a href="#">@userName</a>
                </div>
            </div>

            <!--- Sidemenu -->
            <div id="sidebar-menu">
                <ul class="metismenu" id="side-menu">
                    <li class="menu-title">Navigation</li>
                    <li>
                        <a href="https://dashboard.shikkhanobish.com/index.html">
                            <i class="fas fa-home"></i>
                            <span> Dashboard </span>
                        </a>
                    </li>
                    <li>
                        <a href="Count">
                            <i class="fas fa-calculator"></i>
                            <span> Count </span>
                        </a>
                    </li>
                    <li>
                        <a href="Questions">
                            <i class="far fa-question-circle"></i>
                            <span> Question </span>
                        </a>
                    </li>
                    <li>
                        <a href="TeacherApproval">
                            <i class="fas fa-user-alt"></i>
                            <span> Teacher Qn. Approval </span>
                        </a>
                    </li>
                    <li>
                        <a href="ActiveTeacher">
                            <i class="fas fa-lightbulb"></i>
                            <span> Active Teacher </span>
                        </a>
                    </li>
                    <li>
                        <a href="TeacherWithdraw">
                            <i class="fas fa-money-bill-wave-alt"></i>
                            <span> Teacher Withdraw </span>
                        </a>
                    </li>
                    <li>
                        <a href="SendMessage">
                            <i class="far fa-share-square"></i>
                            <span> Send Message </span>
                        </a>
                    </li>
                    <li>
                        <a href="RndNumGenerator">
                            <i class="fas fa-pen-nib"></i>
                            <span> Data Operator </span>
                        </a>
                    </li>
                    <li>
                        <a href="ApiCodeGenaretor">
                            <i class="fas fa-code"></i>
                            <span> Code Genaretor</span>
                        </a>
                    </li>

                </ul>

            </div>
            <!-- End Sidebar -->

            <div class="clearfix"></div>
        </div>
        <!-- Left Sidebar End -->
        <!-- ============================================================== -->
        <!-- Start Page Content here -->
        <!-- ============================================================== -->

        <div class="content-page">

            <div class="content">
                <div class="form-group row">
                    <div class="col-4">
                        <div class="card">
                            <div class="card-body">
                                <label style="font-size:30px;" class="card-title">Add New Class</label>
                                <div class="form-group row">
                                    <div class="col-12">
                                        <div class="input-group input-group-sm mb-3">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text" id="inputGroup-sizing-sm">Class Name</span>
                                            </div>
                                            <input type="text" class="form-control" aria-label="Small" aria-describedby="inputGroup-sizing-sm" @bind="clsName">
                                        </div>

                                    </div>
                                </div>
                                <div class="card">
                                    <div class="card-body">
                                        <div class="form-group row">
                                            <div class="col-9">
                                                <input class="form-control" placeholder="Parameter" @bind="@singleTableItemTextBox" />
                                                <br />
                                                <div class="form-group row">
                                                    <div class="col-3">
                                                        <button class="btn @intbtnColor btn-sm" @onclick="makeThisparameterInt">int</button>
                                                    </div>
                                                    <div class="col-3">
                                                        <button class="btn @stringbtnColor btn-sm" @onclick="makeThisparameterString">string</button>
                                                    </div>
                                                    <div class="col-3">
                                                        <button class="btn @doublebtnColor btn-sm" @onclick="makeThisparameterDouble">Double</button>
                                                    </div>
                                                    <div class="col-3">
                                                        <button class="btn  @floatbtnColor btn-sm" @onclick="makeThisparameterFloat">Float</button>
                                                    </div>

                                                </div>
                                            </div>
                                            <div class="col-3">
                                                <button class="btn mb-2 mb-md-0 btn-primary btn-block btn-round" @onclick="AddTableItem_Click">Add</button>
                                            </div>
                                        </div>
                                        <div>
                                            <div class="input-group input-group-sm mb-3" style="display: @showNvarchar">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text" id="inputGroup-sizing-sm">Nvarchar Count</span>
                                                </div>
                                                <input type="text" class="form-control" aria-label="Small" aria-describedby="inputGroup-sizing-sm" @bind="nvarcharChount">
                                            </div>
                                        </div>
                                    </div>
                                </div>


                            </div>


                        </div>

                        <div class="card">
                            <div class="card-body">
                                <label style="color: red; font-size: 11px">@errorTxt</label>
                                <label class="card-title">Class Preview</label><br />
                                <label style="font-size: 14px">Name: <b style="font-size: 16px">@clsName</b></label>
                                <br />
                                @foreach (var item in ShowParameter)
                                {
                                    <div class="form-group row">
                                        <div class="col-6">
                                            <label style="font-size: 14px"><b>@item</b></label>
                                        </div>
                                        <div class="col-6">
                                            <button class="btn btn-outline-danger btn-sm" @onclick="@(  () =>  RemoveParameter(item))">Remove</button><br />
                                        </div>
                                    </div>

                                }

                                <div style="align-items: end">
                                    <button class="btn btn-success btn-block btn-round" @onclick="Button_Click_2">Generate Code & Save</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-8">
                        <div class="card">
                            <div class="card-body">
                                <div class="card-title">
                                    <label>Code Preview</label>
                                    <div class="form-group row">
                                        <div class="col-6">
                                            <div class="card">
                                                <div class="card-body">
                                                    <div class="card-title">
                                                        <label>Api Code</label>
                                                    </div>
                                                    <div class="card" style="background-color: #424242">
                                                        <div class="card-body">
                                                            <div class="card-title">
                                                                <label style="color: #46E897">Class Code</label>
                                                            </div>
                                                            <div class="card-text">
                                                                <label style="text-align: center"><code style=" color: white">@cpMakecls</code></label>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="card" style="background-color: #424242">
                                                        <div class="card-body">
                                                            <div class="card-title">
                                                                <label style="color: #46E897">Get Api</label>
                                                            </div>
                                                            <div class="card-text">
                                                                <label style="text-align: center"><code style=" color: white">@cpgetapi</code></label>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="card" style="background-color: #424242">
                                                        <div class="card-body">
                                                            <div class="card-title">
                                                                <label style="color: #46E897">Get Api With ID</label>
                                                            </div>
                                                            <div class="card-text">
                                                                <label style="text-align: center"><code style=" color: white">@cpgetapiwid</code></label>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-6">
                                            <div class="card">
                                                <div class="card-body">
                                                    <div class="card-title">
                                                        <label>SQL Code</label>
                                                    </div>
                                                    <div class="card" style="background-color: #424242">
                                                        <div class="card-body">
                                                            <div class="card-title">
                                                                <label style="color: #46E897">SQL Table Code</label>
                                                            </div>
                                                            <div class="card-text">
                                                                <label style="text-align: center"><code style=" color: white">@cpMakesql</code></label>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="card" style="background-color: #424242">
                                                        <div class="card-body">
                                                            <div class="card-title">
                                                                <label style="color: #46E897">Get Procedure</label>
                                                            </div>
                                                            <div class="card-text">
                                                                <label style="text-align: center"><code style=" color: white">@cpgetPro</code></label>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="card" style="background-color: #424242">
                                                        <div class="card-body">
                                                            <div class="card-title">
                                                                <label style="color: #46E897">Get Procedure With ID</label>
                                                            </div>
                                                            <div class="card-text">
                                                                <label style="text-align: center"><code style=" color: white">@cpgetPrpwid</code></label>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="card" style="background-color: #424242">
                                                        <div class="card-body">
                                                            <div class="card-title">
                                                                <label style="color: #46E897">Set Procedure</label>
                                                            </div>
                                                            <div class="card-text">
                                                                <label style="text-align: center"><code style=" color: white">@cpsetPro</code></label>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>



                <!-- end container-fluid -->
                <!-- Footer Start -->
                <footer class="footer">
                    <div class="container-fluid">
                        <div class="row">
                            <div class="col-md-12">
                                2021 &copy; shikkhanobish
                            </div>
                        </div>
                    </div>
                </footer>
                <!-- end Footer -->
            </div>
            <!-- end content -->

        </div>

        <!-- END content-page -->

    </div>
    <!-- END wrapper -->
    <!-- Vendor js -->
</body>
</html>


@code{

    public string userName { get; set; }
    public string pass { get; set; }
    string clsName = "";
    string totalChapQues;
    string limit1;
    string limit;

    int selecteOPID;
    string intbtnColor { get; set; }
    string floatbtnColor { get; set; }
    string stringbtnColor { get; set; }
    string doublebtnColor { get; set; }
    string Link;
    int SelectedChapterID;
    string BtnString;
    string addName;
    string errorTxt;
    string addNumber;
    string showNvarchar { get; set; }
    string showLoading;
    string selectedChapterName;
    string showLoadingRemoveTask;
    string selectedMCQList;
    string singleTableItemTextBox;
    List<string> classList = new List<string>();
    List<string> ShowParameter = new List<string>();
    List<string> operatorListSelect = new List<string>();
    List<string> subjectList = new List<string>();
    List<string> chapterList = new List<string>();
    List<dataentryOperatorTask> showInfo = new List<dataentryOperatorTask>();
    List<dataentryOperatorTask> LiveshowInfo = new List<dataentryOperatorTask>();
    List<Chapter> allc = new List<Chapter>();
    List<Subject> allsub = new List<Subject>();
    int thisParameter { get; set; }
    List<Teachers> teacherList = new List<Teachers>();
    List<shiEmployee> shiEMList = new List<shiEmployee>();
    List<dataentryOperatorTask> operatorList = new List<dataentryOperatorTask>();
    List<int> numList = new List<int>();
    string inactiveColor = "btn-dark";
    string nvarcharChount { get; set; }
    string activeColor = "btn-success";

    string cpMakecls;
    string cpMakesql;
    string cpgetPro;
    string cpgetPrpwid;
    string cpgetapi;
    string cpgetapiwid;
    string cpsetPro;
    public async Task Logout()
    {
        // await oLocalStore.ClearAsync();
        string redirectURL = "/";
        //nvi.NavigateTo(redirectURL);
    }
    protected override async Task OnInitializedAsync()
    {
        intbtnColor = inactiveColor;
        stringbtnColor = inactiveColor;
        floatbtnColor = inactiveColor;
        doublebtnColor = inactiveColor;
        showNvarchar = "None";
        showLoadingRemoveTask = "None";
        showLoading = "None";
        BtnString = "Assign Task";
        userName = StaticClassToPassData.thisAdmin.name;
        pass = StaticClassToPassData.thisAdmin.passWord;
        getData();



    }

    List<string> tblItemList = new List<string>();
    List<ClassGen> allClass = new List<ClassGen>();
    List<ClassGen> allClassForCal = new List<ClassGen>();
    public void RemoveParameter(string thispara)
    {
        for (int i = 0; i < ShowParameter.Count; i++)
        {
            if (ShowParameter[i] == thispara)
            {
                tblItemList.RemoveAt(i);
                ShowParameter.RemoveAt(i);
            }
        }
    }
    public async Task GetAllClass()
    {
        allClass = await "https://api.shikkhanobish.com/api/ApiMaker/getAPiMaker".GetJsonAsync<List<ClassGen>>();
        allClassForCal = allClass;
        //clsList.ItemsSource = allClass;
    }
    public void getData()
    {
        GetAllClass();
    }
    private void clearnItemList_Click()
    {
        //TableElementList.ItemsSource = null;
        tblItemList.Clear();
    }
    public async Task refresh()
    {
        allClass = await "https://api.shikkhanobish.com/api/ApiMaker/getAPiMaker".GetJsonAsync<List<ClassGen>>();
        allClassForCal = allClass;
        // clsList.ItemsSource = null;
        // clsList.ItemsSource = allClass;
        //rfslbl.Content = "";
    }
    public void makeThisparameterInt()
    {
        thisParameter = 1;
        showNvarchar = "None";
        intbtnColor = activeColor;
        stringbtnColor = inactiveColor;
        floatbtnColor = inactiveColor;
        doublebtnColor = inactiveColor;
    }
    public void makeThisparameterString()
    {
        thisParameter = 2;
        showNvarchar = "Block";
        intbtnColor = inactiveColor;
        stringbtnColor = activeColor;
        floatbtnColor = inactiveColor;
        doublebtnColor = inactiveColor;
    }
    public void makeThisparameterDouble()
    {
        thisParameter = 3;
        showNvarchar = "None";
        intbtnColor = inactiveColor;
        stringbtnColor = inactiveColor;
        floatbtnColor = inactiveColor;
        doublebtnColor = activeColor;
    }
    public void makeThisparameterFloat()
    {
        thisParameter = 4;
        showNvarchar = "None";
        intbtnColor = inactiveColor;
        stringbtnColor = inactiveColor;
        floatbtnColor = activeColor;
        doublebtnColor = inactiveColor;
    }
    private void AddTableItem_Click()
    {
        if (tblItemList.Count == 20 || thisParameter == 0 || clsName.Contains(" "))
        {
            errorTxt = "Select Parameter or Can't add more then 20 parameter or class name can't contain space";
            return;
        }
        else
        {
            string item = "";
            if (!singleTableItemTextBox.Contains(" "))
            {
                item = singleTableItemTextBox;
            }

            if (thisParameter == 1)
            {
                ShowParameter.Add(item + " int");
            }
            if (thisParameter == 2)
            {
                if (nvarcharChount == "" || nvarcharChount == null)
                {
                    return;
                }
                ShowParameter.Add(item + " string nvarchar(" + nvarcharChount + ")");
            }
            if (thisParameter == 3)
            {
                ShowParameter.Add(item + " double");
            }
            if (thisParameter == 4)
            {
                ShowParameter.Add(item + " float");
            }
            item += " " + thisParameter;
            thisParameter = 0;
            nvarcharChount = "";
            errorTxt = "";
            singleTableItemTextBox = "";
            showNvarchar = "None";
            tblItemList.Add(item);
            intbtnColor = inactiveColor;
            stringbtnColor = inactiveColor;
            floatbtnColor = inactiveColor;
            doublebtnColor = inactiveColor;
            //Show
            //TableElementList.ItemsSource = null;
            //TableElementList.ItemsSource = tblItemList;
        }

    }


    public async Task SetClass()
    {
        List<string> list = ConvertToServerList();
        var res1 = await "https://api.shikkhanobish.com/api/ApiMaker/setAPiMaker".PostUrlEncodedAsync(new
        {
            @PrNumber = list[0],
            @tableName = list[1],
            @pr1n = list[2],
            @pr2n = list[3],
            @pr3n = list[4],
            @pr4n = list[5],
            @pr5n = list[6],
            @pr6n = list[7],
            @pr7n = list[8],
            @pr8n = list[9],
            @pr9n = list[10],
            @pr10n = list[11],
            @pr11n = list[12],
            @pr12n = list[13],
            @pr13n = list[14],
            @pr14n = list[15],
            @pr15n = list[16],
            @pr16n = list[17],
            @pr17n = list[18],
            @pr18n = list[19],
            @pr19n = list[20],
            @pr20n = list[21],
            @ID = list[22]
        })
   .ReceiveJson<Response>();

    }

    private void Button_Click()
    {
        SetClass();
        //rfslbl.Content = "Refresh Now";
    }

    public List<string> ConvertToServerList()
    {
        List<string> content = new List<string>();
        content.Add("" + tblItemList.Count);
        content.Add(clsName);
        for (int i = 0; i < tblItemList.Count; i++)
        {
            content.Add(tblItemList[i]);
        }
        for (int i = tblItemList.Count; i < 20; i++)
        {
            content.Add("N/A");
        }
        if (allClassForCal.Count != 0)
        {
            int max = allClassForCal[0].ID;
            for (int i = 0; i < allClassForCal.Count; i++)
            {
                if (max < allClassForCal[i].ID)
                {
                    max = allClassForCal[i].ID;
                }
            }
            content.Add("" + (max + 1));
        }
        else
        {
            content.Add("" + 0);
        }
        return content;
    }
    public ClassGen converThistoClasGen()
    {
        ClassGen newmade = new ClassGen();
        List<string> list = ConvertToServerList();

        newmade.PrNumber = int.Parse(list[0]);
        newmade.tableName = list[1];
        newmade.pr1n = list[2];
        newmade.pr2n = list[3];
        newmade.pr3n = list[4];
        newmade.pr4n = list[5];
        newmade.pr5n = list[6];
        newmade.pr6n = list[7];
        newmade.pr7n = list[8];
        newmade.pr8n = list[9];
        newmade.pr9n = list[10];
        newmade.pr10n = list[11];
        newmade.pr11n = list[12];
        newmade.pr12n = list[13];
        newmade.pr13n = list[14];
        newmade.pr14n = list[15];
        newmade.pr15n = list[16];
        newmade.pr16n = list[17];
        newmade.pr17n = list[18];
        newmade.pr18n = list[19];
        newmade.pr19n = list[20];
        newmade.pr20n = list[21];
        newmade.ID = int.Parse(list[22]);

        return newmade;
    }
    private void Button_Click_1()
    {
        refresh();
    }

    private void Button_Click_2()
    {
        ClassGen thisclasGen = converThistoClasGen();
        cpMakesql = makeSql(thisclasGen);
        cpMakecls = makeClass(thisclasGen);
        cpgetapi = makeGetApi(thisclasGen);
        cpgetapiwid = makeGetApiWithID(thisclasGen);
        cpgetPro = makeGetProcedure(thisclasGen);
        cpgetPrpwid = makeGetProcedureWithID(thisclasGen);
        cpsetPro = makeSetProcedure(thisclasGen);
        //gg
        //rfslbl.Content = "Code Genareted!!!";
    }
    public string makeClass(ClassGen thisclass)
    {


        List<string> thisClassParameter = new List<string>();
        char[] charsToTrim = { ' ', '1', '2', '3', '4' };
        thisClassParameter.Add(thisclass.pr1n);
        thisClassParameter.Add(thisclass.pr2n);
        thisClassParameter.Add(thisclass.pr3n);
        thisClassParameter.Add(thisclass.pr4n);
        thisClassParameter.Add(thisclass.pr5n);
        thisClassParameter.Add(thisclass.pr6n);
        thisClassParameter.Add(thisclass.pr7n);
        thisClassParameter.Add(thisclass.pr8n);
        thisClassParameter.Add(thisclass.pr9n);
        thisClassParameter.Add(thisclass.pr10n);
        thisClassParameter.Add(thisclass.pr11n);
        thisClassParameter.Add(thisclass.pr12n);
        thisClassParameter.Add(thisclass.pr13n);
        thisClassParameter.Add(thisclass.pr14n);
        thisClassParameter.Add(thisclass.pr15n);
        thisClassParameter.Add(thisclass.pr16n);
        thisClassParameter.Add(thisclass.pr17n);
        thisClassParameter.Add(thisclass.pr18n);
        thisClassParameter.Add(thisclass.pr19n);
        thisClassParameter.Add(thisclass.pr20n);
        string classCode = "";
        for (int i = 0; i < thisclass.PrNumber; i++)
        {
            if (thisClassParameter[i][thisClassParameter[i].Length - 1] == '1')
            {
                classCode += "public  int " + thisClassParameter[i].Trim(charsToTrim) + " { get ; set ;} \n";
            }
            else if (thisClassParameter[i][thisClassParameter[i].Length - 1] == '2')
            {
                classCode += "public string " + thisClassParameter[i].Trim(charsToTrim) + " { get ; set ;} \n";
            }
            else if (thisClassParameter[i][thisClassParameter[i].Length - 1] == '3')
            {
                classCode += "public double " + thisClassParameter[i].Trim(charsToTrim) + " { get ; set ;} \n";
            }
            else if (thisClassParameter[i][thisClassParameter[i].Length - 1] == '4')
            {
                classCode += "public float " + thisClassParameter[i].Trim(charsToTrim) + " { get ; set ;} \n";
            }

        }

        classCode += "public Response { get ; set ;} \n";



        return classCode;
    }

    public string makeSql(ClassGen thisclass)
    {

        List<string> thisClassParameter = new List<string>();
        char[] charsToTrim = { ' ', '1', '2', '3', '4' };
        thisClassParameter.Add(thisclass.pr1n);
        thisClassParameter.Add(thisclass.pr2n);
        thisClassParameter.Add(thisclass.pr3n);
        thisClassParameter.Add(thisclass.pr4n);
        thisClassParameter.Add(thisclass.pr5n);
        thisClassParameter.Add(thisclass.pr6n);
        thisClassParameter.Add(thisclass.pr7n);
        thisClassParameter.Add(thisclass.pr8n);
        thisClassParameter.Add(thisclass.pr9n);
        thisClassParameter.Add(thisclass.pr10n);
        thisClassParameter.Add(thisclass.pr11n);
        thisClassParameter.Add(thisclass.pr12n);
        thisClassParameter.Add(thisclass.pr13n);
        thisClassParameter.Add(thisclass.pr14n);
        thisClassParameter.Add(thisclass.pr15n);
        thisClassParameter.Add(thisclass.pr16n);
        thisClassParameter.Add(thisclass.pr17n);
        thisClassParameter.Add(thisclass.pr18n);
        thisClassParameter.Add(thisclass.pr19n);
        thisClassParameter.Add(thisclass.pr20n);

        string classCode = "create table " + thisclass.tableName + "(\n";
        for (int i = 0; i < thisclass.PrNumber; i++)
        {
            if (thisClassParameter[i][thisClassParameter[i].Length - 1] == '1')
            {
                if (i == thisclass.PrNumber - 1)
                {
                    classCode += thisClassParameter[i].Trim(charsToTrim) + " int" + "\n";
                }
                else
                {
                    classCode += thisClassParameter[i].Trim(charsToTrim) + " int" + ",\n";
                }
            }
            else if (thisClassParameter[i][thisClassParameter[i].Length - 1] == '2')
            {
                if (i == thisclass.PrNumber - 1)
                {
                    classCode += thisClassParameter[i].Trim(charsToTrim) + " nvarchar(50)" + "\n";
                }
                else
                {
                    classCode += thisClassParameter[i].Trim(charsToTrim) + " nvarchar(50)" + ",\n";
                }
            }
            else if (thisClassParameter[i][thisClassParameter[i].Length - 1] == '3' || thisClassParameter[i][thisClassParameter[i].Length - 1] == '4')
            {
                if (i == thisclass.PrNumber - 1)
                {
                    classCode += thisClassParameter[i] + " float" + "\n";
                }
                else
                {
                    classCode += thisClassParameter[i] + " float" + ",\n";
                }
            }

        }


        return classCode;
    }



    public string makeGetProcedure(ClassGen thisClsGen)
    {
        string getProCode = "create procedure get" + thisClsGen.tableName + "\n as begin \n Select * from " + thisClsGen.tableName + "\n end";

        getProCode = "--------------------- Get All Info Procedure ----------------------------\n" + getProCode + ";\n---------------------------------------------------------";

        return getProCode;


    }

    public string makeGetProcedureWithID(ClassGen thisclass)
    {


        List<string> thisClassParameter = new List<string>();
        char[] charsToTrim = { ' ', '1', '2', '3', '4' };
        thisClassParameter.Add(thisclass.pr1n);
        thisClassParameter.Add(thisclass.pr2n);
        thisClassParameter.Add(thisclass.pr3n);
        thisClassParameter.Add(thisclass.pr4n);
        thisClassParameter.Add(thisclass.pr5n);
        thisClassParameter.Add(thisclass.pr6n);
        thisClassParameter.Add(thisclass.pr7n);
        thisClassParameter.Add(thisclass.pr8n);
        thisClassParameter.Add(thisclass.pr9n);
        thisClassParameter.Add(thisclass.pr10n);
        thisClassParameter.Add(thisclass.pr11n);
        thisClassParameter.Add(thisclass.pr12n);
        thisClassParameter.Add(thisclass.pr13n);
        thisClassParameter.Add(thisclass.pr14n);
        thisClassParameter.Add(thisclass.pr15n);
        thisClassParameter.Add(thisclass.pr16n);
        thisClassParameter.Add(thisclass.pr17n);
        thisClassParameter.Add(thisclass.pr18n);
        thisClassParameter.Add(thisclass.pr19n);
        thisClassParameter.Add(thisclass.pr20n);
        string proCode = "";
        proCode = "create procedure get" + thisclass.tableName + "WithID\n";
        proCode += " @" + thisClassParameter[0].Trim(charsToTrim) + " int" + "\n";

        proCode += "as begin \n Select ( ";

        for (int i = 0; i < thisclass.PrNumber; i++)
        {
            if (i == thisclass.PrNumber - 1)
            {
                proCode += thisClassParameter[i].Trim(charsToTrim);
            }
            else
            {
                proCode += thisClassParameter[i].Trim(charsToTrim) + ", ";
            }

        }
        proCode += ") from " + thisclass.tableName + " \n Where " + thisClassParameter[0].Trim(charsToTrim) + " = @" + thisClassParameter[0].Trim(charsToTrim) + "  \nend";



        return proCode;

    }

    public string makeGetApi(ClassGen thisclass)
    {


        List<string> thisClassParameter = new List<string>();
        char[] charsToTrim = { ' ', '1', '2', '3', '4' };
        thisClassParameter.Add(thisclass.pr1n);
        thisClassParameter.Add(thisclass.pr2n);
        thisClassParameter.Add(thisclass.pr3n);
        thisClassParameter.Add(thisclass.pr4n);
        thisClassParameter.Add(thisclass.pr5n);
        thisClassParameter.Add(thisclass.pr6n);
        thisClassParameter.Add(thisclass.pr7n);
        thisClassParameter.Add(thisclass.pr8n);
        thisClassParameter.Add(thisclass.pr9n);
        thisClassParameter.Add(thisclass.pr10n);
        thisClassParameter.Add(thisclass.pr11n);
        thisClassParameter.Add(thisclass.pr12n);
        thisClassParameter.Add(thisclass.pr13n);
        thisClassParameter.Add(thisclass.pr14n);
        thisClassParameter.Add(thisclass.pr15n);
        thisClassParameter.Add(thisclass.pr16n);
        thisClassParameter.Add(thisclass.pr17n);
        thisClassParameter.Add(thisclass.pr18n);
        thisClassParameter.Add(thisclass.pr19n);
        thisClassParameter.Add(thisclass.pr20n);

        string apiCode = "";
        apiCode = "[AcceptVerbs(\"GET\", \"POST\")]\npublic List<" + thisclass.tableName + "> get" + thisclass.tableName + "()\n{\nList<" + thisclass.tableName + "> objRList" + " = new List<" + thisclass.tableName + ">();";

        apiCode += "\ntry \n" +
                "{\n" +
                "Connection();\n" +
                "SqlCommand cmd = new SqlCommand(\"" + "get" + thisclass.tableName + "\", conn);\n" + "cmd.CommandType = System.Data.CommandType.StoredProcedure;\n";
        apiCode += "conn.Open();\n" +
                   "SqlDataReader reader = cmd.ExecuteReader();\n";
        apiCode += "while (reader.Read())\n" +
        "{\n";
        apiCode += thisclass.tableName + " objAdd" + " = new " + thisclass.tableName + "();\n";
        for (int i = 0; i < thisclass.PrNumber; i++)
        {
            if (thisClassParameter[i][thisClassParameter[i].Length - 1] == '1')
            {
                apiCode += "objAdd." + thisClassParameter[i].Trim(charsToTrim) + " = Convert.ToInt32(reader[\"" + thisClassParameter[i].Trim(charsToTrim) + "\"]);\n";
            }
            else if (thisClassParameter[i][thisClassParameter[i].Length - 1] == '2')
            {
                apiCode += "objAdd." + thisClassParameter[i].Trim(charsToTrim) + " = reader[\"" + thisClassParameter[i].Trim(charsToTrim) + "\"].ToString(); \n";
            }
            else if (thisClassParameter[i][thisClassParameter[i].Length - 1] == '2')
            {
                apiCode += "objAdd." + thisClassParameter[i].Trim(charsToTrim) + " = Convert.ToInt32(reader[\"" + thisClassParameter[i].Trim(charsToTrim) + "\"]);\n";
            }
            else if (thisClassParameter[i][thisClassParameter[i].Length - 1] == '2')
            {
                apiCode += "objAdd." + thisClassParameter[i].Trim(charsToTrim) + " = Convert.ToInt32(reader[\"" + thisClassParameter[i].Trim(charsToTrim) + "\"]);\n";
            }
        }
        apiCode += "objRList.Add(objAdd);\n}\n" +
                "conn.Close();\n" +
                "}\n" +
                "catch (Exception ex)\n" +
                "{\n" +
                thisclass.tableName + " objAdd" + " = new " + thisclass.tableName + "();\n" +
                "objAdd.Response = ex.Message;\n" +
                "objRList.Add(objAdd);\n" +
                "}\n" +
                "retrun objRList;\n" +
                "}\n";

        return apiCode;
    }

    public string makeGetApiWithID(ClassGen thisclass)
    {


        List<string> thisClassParameter = new List<string>();
        char[] charsToTrim = { ' ', '1', '2', '3', '4' };
        thisClassParameter.Add(thisclass.pr1n);
        thisClassParameter.Add(thisclass.pr2n);
        thisClassParameter.Add(thisclass.pr3n);
        thisClassParameter.Add(thisclass.pr4n);
        thisClassParameter.Add(thisclass.pr5n);
        thisClassParameter.Add(thisclass.pr6n);
        thisClassParameter.Add(thisclass.pr7n);
        thisClassParameter.Add(thisclass.pr8n);
        thisClassParameter.Add(thisclass.pr9n);
        thisClassParameter.Add(thisclass.pr10n);
        thisClassParameter.Add(thisclass.pr11n);
        thisClassParameter.Add(thisclass.pr12n);
        thisClassParameter.Add(thisclass.pr13n);
        thisClassParameter.Add(thisclass.pr14n);
        thisClassParameter.Add(thisclass.pr15n);
        thisClassParameter.Add(thisclass.pr16n);
        thisClassParameter.Add(thisclass.pr17n);
        thisClassParameter.Add(thisclass.pr18n);
        thisClassParameter.Add(thisclass.pr19n);
        thisClassParameter.Add(thisclass.pr20n);

        string apiCode = "";
        apiCode = "[AcceptVerbs(\"GET\", \"POST\")]\npublic " + thisclass.tableName + " get" + thisclass.tableName + "WithID(" + thisclass.tableName + " obj)\n{\n" + thisclass.tableName + " objR" + " = new " + thisclass.tableName + "();";

        apiCode += "\ntry \n" +
                "{\n" +
                "Connection();\n" +
                "SqlCommand cmd = new SqlCommand(\"" + "get" + thisclass.tableName + "WithID\", conn);\n" + "cmd.CommandType = System.Data.CommandType.StoredProcedure;\n" +
                "cmd.Parameters.AddWithValue(\"@" + thisClassParameter[0].Trim(charsToTrim) + "\", obj." + thisClassParameter[0].Trim(charsToTrim) + ");\n";
        apiCode += "conn.Open();\n" +
                   "SqlDataReader reader = cmd.ExecuteReader();\n";
        apiCode += "while (reader.Read())\n" +
        "{\n";
        for (int i = 0; i < thisclass.PrNumber; i++)
        {
            if (thisClassParameter[i][thisClassParameter[i].Length - 1] == '1')
            {
                apiCode += "objR." + thisClassParameter[i].Trim(charsToTrim) + " = Convert.ToInt32(reader[\"" + thisClassParameter[i].Trim(charsToTrim) + "\"]);\n";
            }
            else if (thisClassParameter[i][thisClassParameter[i].Length - 1] == '2')
            {
                apiCode += "objR." + thisClassParameter[i].Trim(charsToTrim) + " = reader[\"" + thisClassParameter[i].Trim(charsToTrim) + "\"].ToString(); \n";
            }
            else if (thisClassParameter[i][thisClassParameter[i].Length - 1] == '2')
            {
                apiCode += "objR." + thisClassParameter[i].Trim(charsToTrim) + " = Convert.ToInt32(reader[\"" + thisClassParameter[i].Trim(charsToTrim) + "\"]);\n";
            }
            else if (thisClassParameter[i][thisClassParameter[i].Length - 1] == '2')
            {
                apiCode += "objR." + thisClassParameter[i].Trim(charsToTrim) + " = Convert.ToInt32(reader[\"" + thisClassParameter[i].Trim(charsToTrim) + "\"]);\n";
            }
        }
        apiCode += "\n}\n" +
                "conn.Close();\n" +
                "}\n" +
                "catch (Exception ex)\n" +
                "{\n" +
                thisclass.tableName + " objR" + " = new " + thisclass.tableName + "();\n" +
                "objR.Response = ex.Message;\n" +
                "}\n" +
                "retrun objR;\n" +
                "}\n";

        return apiCode;
    }



    public string makeSetProcedure(ClassGen thisclass)
    {


        List<string> thisClassParameter = new List<string>();
        char[] charsToTrim = { ' ', '1', '2', '3', '4' };
        thisClassParameter.Add(thisclass.pr1n);
        thisClassParameter.Add(thisclass.pr2n);
        thisClassParameter.Add(thisclass.pr3n);
        thisClassParameter.Add(thisclass.pr4n);
        thisClassParameter.Add(thisclass.pr5n);
        thisClassParameter.Add(thisclass.pr6n);
        thisClassParameter.Add(thisclass.pr7n);
        thisClassParameter.Add(thisclass.pr8n);
        thisClassParameter.Add(thisclass.pr9n);
        thisClassParameter.Add(thisclass.pr10n);
        thisClassParameter.Add(thisclass.pr11n);
        thisClassParameter.Add(thisclass.pr12n);
        thisClassParameter.Add(thisclass.pr13n);
        thisClassParameter.Add(thisclass.pr14n);
        thisClassParameter.Add(thisclass.pr15n);
        thisClassParameter.Add(thisclass.pr16n);
        thisClassParameter.Add(thisclass.pr17n);
        thisClassParameter.Add(thisclass.pr18n);
        thisClassParameter.Add(thisclass.pr19n);
        thisClassParameter.Add(thisclass.pr20n);
        string getProCode = "create procedure set" + thisclass.tableName + "\n";

        for (int i = 0; i < thisclass.PrNumber; i++)
        {
            if (thisClassParameter[i][thisClassParameter[i].Length - 1] == '1')
            {
                if (i == thisclass.PrNumber - 1)
                {
                    getProCode += "@" + thisClassParameter[i].Trim(charsToTrim) + " int" + "\n";
                }
                else
                {
                    getProCode += "@" + thisClassParameter[i].Trim(charsToTrim) + " int" + ",\n";
                }
            }
            else if (thisClassParameter[i][thisClassParameter[i].Length - 1] == '2')
            {
                if (i == thisclass.PrNumber - 1)
                {
                    getProCode += "@" + thisClassParameter[i].Trim(charsToTrim) + " nvarchar(50)" + "\n";
                }
                else
                {
                    getProCode += "@" + thisClassParameter[i].Trim(charsToTrim) + " nvarchar(50)" + ",\n";
                }
            }
            else if (thisClassParameter[i][thisClassParameter[i].Length - 1] == '3' || thisClassParameter[i][thisClassParameter[i].Length - 1] == '4')
            {
                if (i == thisclass.PrNumber - 1)
                {
                    getProCode += "@" + thisClassParameter[i] + " float" + "\n";
                }
                else
                {
                    getProCode += "@" + thisClassParameter[i] + " float" + ",\n";
                }
            }
        }
        getProCode += "as begin \n Insert Into " + thisclass.tableName + "(";
        for (int i = 0; i < thisclass.PrNumber; i++)
        {
            if (i == thisclass.PrNumber - 1)
            {
                getProCode += thisClassParameter[i].Trim(charsToTrim);
            }
            else
            {
                getProCode += thisClassParameter[i].Trim(charsToTrim) + ", ";
            }
        }
        getProCode += ")\n values (";
        for (int i = 0; i < thisclass.PrNumber; i++)
        {
            if (i == thisclass.PrNumber - 1)
            {
                getProCode += "@" + thisClassParameter[i].Trim(charsToTrim);
            }
            else
            {
                getProCode += "@" + thisClassParameter[i].Trim(charsToTrim) + ", ";
            }
        }
        getProCode += ")\nend;";

        return getProCode;
    }




}


















